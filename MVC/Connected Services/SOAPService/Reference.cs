//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC.SOAPService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SOAPService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        MVC.SOAPService.CompositeType GetDataUsingDataContract(MVC.SOAPService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<MVC.SOAPService.CompositeType> GetDataUsingDataContractAsync(MVC.SOAPService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAuthors", ReplyAction="http://tempuri.org/IService1/GetAuthorsResponse")]
        ApplicationService.DTOs.AuthorDTO[] GetAuthors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAuthors", ReplyAction="http://tempuri.org/IService1/GetAuthorsResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTOs.AuthorDTO[]> GetAuthorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostAuthor", ReplyAction="http://tempuri.org/IService1/PostAuthorResponse")]
        string PostAuthor(ApplicationService.DTOs.AuthorDTO authorDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostAuthor", ReplyAction="http://tempuri.org/IService1/PostAuthorResponse")]
        System.Threading.Tasks.Task<string> PostAuthorAsync(ApplicationService.DTOs.AuthorDTO authorDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAuthorByID", ReplyAction="http://tempuri.org/IService1/GetAuthorByIDResponse")]
        ApplicationService.DTOs.AuthorDTO GetAuthorByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAuthorByID", ReplyAction="http://tempuri.org/IService1/GetAuthorByIDResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTOs.AuthorDTO> GetAuthorByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteAuthor", ReplyAction="http://tempuri.org/IService1/DeleteAuthorResponse")]
        string DeleteAuthor(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteAuthor", ReplyAction="http://tempuri.org/IService1/DeleteAuthorResponse")]
        System.Threading.Tasks.Task<string> DeleteAuthorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSongs", ReplyAction="http://tempuri.org/IService1/GetSongsResponse")]
        ApplicationService.DTOs.SongDTO[] GetSongs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSongs", ReplyAction="http://tempuri.org/IService1/GetSongsResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTOs.SongDTO[]> GetSongsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostSongs", ReplyAction="http://tempuri.org/IService1/PostSongsResponse")]
        string PostSongs(ApplicationService.DTOs.SongDTO songDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostSongs", ReplyAction="http://tempuri.org/IService1/PostSongsResponse")]
        System.Threading.Tasks.Task<string> PostSongsAsync(ApplicationService.DTOs.SongDTO songDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSongByID", ReplyAction="http://tempuri.org/IService1/GetSongByIDResponse")]
        ApplicationService.DTOs.SongDTO GetSongByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSongByID", ReplyAction="http://tempuri.org/IService1/GetSongByIDResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTOs.SongDTO> GetSongByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteSong", ReplyAction="http://tempuri.org/IService1/DeleteSongResponse")]
        string DeleteSong(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteSong", ReplyAction="http://tempuri.org/IService1/DeleteSongResponse")]
        System.Threading.Tasks.Task<string> DeleteSongAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAlbums", ReplyAction="http://tempuri.org/IService1/GetAlbumsResponse")]
        ApplicationService.DTOs.AlbumDTO[] GetAlbums();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAlbums", ReplyAction="http://tempuri.org/IService1/GetAlbumsResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTOs.AlbumDTO[]> GetAlbumsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostAlbums", ReplyAction="http://tempuri.org/IService1/PostAlbumsResponse")]
        string PostAlbums(ApplicationService.DTOs.AlbumDTO albumDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostAlbums", ReplyAction="http://tempuri.org/IService1/PostAlbumsResponse")]
        System.Threading.Tasks.Task<string> PostAlbumsAsync(ApplicationService.DTOs.AlbumDTO albumDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAlbumByID", ReplyAction="http://tempuri.org/IService1/GetAlbumByIDResponse")]
        ApplicationService.DTOs.AlbumDTO GetAlbumByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAlbumByID", ReplyAction="http://tempuri.org/IService1/GetAlbumByIDResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTOs.AlbumDTO> GetAlbumByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteAlbum", ReplyAction="http://tempuri.org/IService1/DeleteAlbumResponse")]
        string DeleteAlbum(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteAlbum", ReplyAction="http://tempuri.org/IService1/DeleteAlbumResponse")]
        System.Threading.Tasks.Task<string> DeleteAlbumAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : MVC.SOAPService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<MVC.SOAPService.IService1>, MVC.SOAPService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public MVC.SOAPService.CompositeType GetDataUsingDataContract(MVC.SOAPService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<MVC.SOAPService.CompositeType> GetDataUsingDataContractAsync(MVC.SOAPService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public ApplicationService.DTOs.AuthorDTO[] GetAuthors() {
            return base.Channel.GetAuthors();
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTOs.AuthorDTO[]> GetAuthorsAsync() {
            return base.Channel.GetAuthorsAsync();
        }
        
        public string PostAuthor(ApplicationService.DTOs.AuthorDTO authorDTO) {
            return base.Channel.PostAuthor(authorDTO);
        }
        
        public System.Threading.Tasks.Task<string> PostAuthorAsync(ApplicationService.DTOs.AuthorDTO authorDTO) {
            return base.Channel.PostAuthorAsync(authorDTO);
        }
        
        public ApplicationService.DTOs.AuthorDTO GetAuthorByID(int id) {
            return base.Channel.GetAuthorByID(id);
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTOs.AuthorDTO> GetAuthorByIDAsync(int id) {
            return base.Channel.GetAuthorByIDAsync(id);
        }
        
        public string DeleteAuthor(int id) {
            return base.Channel.DeleteAuthor(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteAuthorAsync(int id) {
            return base.Channel.DeleteAuthorAsync(id);
        }
        
        public ApplicationService.DTOs.SongDTO[] GetSongs() {
            return base.Channel.GetSongs();
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTOs.SongDTO[]> GetSongsAsync() {
            return base.Channel.GetSongsAsync();
        }
        
        public string PostSongs(ApplicationService.DTOs.SongDTO songDTO) {
            return base.Channel.PostSongs(songDTO);
        }
        
        public System.Threading.Tasks.Task<string> PostSongsAsync(ApplicationService.DTOs.SongDTO songDTO) {
            return base.Channel.PostSongsAsync(songDTO);
        }
        
        public ApplicationService.DTOs.SongDTO GetSongByID(int id) {
            return base.Channel.GetSongByID(id);
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTOs.SongDTO> GetSongByIDAsync(int id) {
            return base.Channel.GetSongByIDAsync(id);
        }
        
        public string DeleteSong(int id) {
            return base.Channel.DeleteSong(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteSongAsync(int id) {
            return base.Channel.DeleteSongAsync(id);
        }
        
        public ApplicationService.DTOs.AlbumDTO[] GetAlbums() {
            return base.Channel.GetAlbums();
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTOs.AlbumDTO[]> GetAlbumsAsync() {
            return base.Channel.GetAlbumsAsync();
        }
        
        public string PostAlbums(ApplicationService.DTOs.AlbumDTO albumDTO) {
            return base.Channel.PostAlbums(albumDTO);
        }
        
        public System.Threading.Tasks.Task<string> PostAlbumsAsync(ApplicationService.DTOs.AlbumDTO albumDTO) {
            return base.Channel.PostAlbumsAsync(albumDTO);
        }
        
        public ApplicationService.DTOs.AlbumDTO GetAlbumByID(int id) {
            return base.Channel.GetAlbumByID(id);
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTOs.AlbumDTO> GetAlbumByIDAsync(int id) {
            return base.Channel.GetAlbumByIDAsync(id);
        }
        
        public string DeleteAlbum(int id) {
            return base.Channel.DeleteAlbum(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteAlbumAsync(int id) {
            return base.Channel.DeleteAlbumAsync(id);
        }
    }
}
